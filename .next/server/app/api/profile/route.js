"use strict";(()=>{var e={};e.id=442,e.ids=[442],e.modules={38013:e=>{e.exports=require("mongodb")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},78992:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>E,patchFetch:()=>D,requestAsyncStorage:()=>b,routeModule:()=>y,serverHooks:()=>x,staticGenerationAsyncStorage:()=>h});var o={};t.r(o),t.d(o,{GET:()=>w,PUT:()=>v});var a=t(49303),n=t(88716),i=t(60670),s=t(87070),l=t(45609),u=t(94012),c=t(2021),d=t(38013);let p=async()=>(await c.Z).db(),m=async()=>{try{let e=await p(),r=await (0,l.getServerSession)(u.L);if(!r?.user?.email)return null;let t=await e.collection("users").findOne({email:r.user.email});if(!t)return null;let o={...t};return o._id=o._id?.toString()||"",o}catch(e){return console.error("Error al obtener el usuario actual:",e),null}},f=async(e,r)=>{try{let t=await p(),o={};for(let e of("birthDate"in r&&r.birthDate&&(o.birthDate=new Date(r.birthDate)),["name","username","displayName","birthDate","gender","country","bio"]))"birthDate"!==e&&e in r&&(o[e]=r[e]);let a=await t.collection("users").findOneAndUpdate({_id:new d.ObjectId(e)},{$set:o},{returnDocument:"after"});if(!a)return{success:!1,error:"Usuario no encontrado"};let n={...a,_id:a._id?.toString()||""};return{success:!0,data:n}}catch(e){return console.error("Error al actualizar el perfil:",e),{success:!1,error:e instanceof Error?e.message:"Error al actualizar el perfil"}}};async function g(){return await c.Z}async function w(){try{let e=await m();if(!e)return s.NextResponse.json({error:"No autorizado"},{status:401});return s.NextResponse.json(e)}catch(e){return console.error("Error al obtener el perfil:",e),s.NextResponse.json({error:"Error al obtener el perfil"},{status:500})}}async function v(e){try{let r=await (0,l.getServerSession)(u.L);if(!r?.user?.email)return s.NextResponse.json({error:"No autorizado"},{status:401});let t=await m();if(!t||!t._id)return s.NextResponse.json({error:"Usuario no encontrado"},{status:404});let o="string"==typeof t._id?t._id:t._id.toString(),a=await e.json();if(a.username&&a.username.trim().length<3)return s.NextResponse.json({error:"El nombre de usuario debe tener al menos 3 caracteres"},{status:400});if(a.username&&!/^[a-zA-Z0-9_]+$/.test(a.username))return s.NextResponse.json({error:"El nombre de usuario solo puede contener letras, n\xfameros y guiones bajos (_)"},{status:400});if(a.username&&a.username!==t.username){let e=(await g()).db();if(await e.collection("users").findOne({username:a.username.trim().toLowerCase(),_id:{$ne:new d.ObjectId(o)}}))return s.NextResponse.json({error:"El nombre de usuario ya est\xe1 en uso"},{status:400})}let n={...void 0!==a.name&&{name:a.name},...void 0!==a.username&&{username:a.username.trim().toLowerCase()},...void 0!==a.birthDate&&{birthDate:a.birthDate},...void 0!==a.gender&&{gender:a.gender||"prefiero-no-decir"},...void 0!==a.country&&{country:a.country||"MX"},...void 0!==a.bio&&{bio:a.bio}},i=await f(o,n);if(!i.success)return console.error("Error al actualizar el perfil:",i.error),s.NextResponse.json({error:i.error||"Error al actualizar el perfil"},{status:400});return console.log("Perfil actualizado correctamente:",i.data),s.NextResponse.json({...i.data,_id:i.data?._id?.toString()||""})}catch(e){return console.error("Error al actualizar el perfil:",e),s.NextResponse.json({error:"Error interno del servidor"},{status:500})}}let y=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/profile/route",pathname:"/api/profile",filename:"route",bundlePath:"app/api/profile/route"},resolvedPagePath:"/Users/mikeblackhat/Spotify-clone v0.0.57/frontend/app/api/profile/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:b,staticGenerationAsyncStorage:h,serverHooks:x}=y,E="/api/profile/route";function D(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:h})}},94012:(e,r,t)=>{t.d(r,{L:()=>l});var o=t(64704),a=t(53797),n=t(77234),i=t(2021),s=t(98691);let l={providers:[(0,n.Z)({clientId:process.env.GOOGLE_CLIENT_ID||"",clientSecret:process.env.GOOGLE_CLIENT_SECRET||"",allowDangerousEmailAccountLinking:!0}),(0,a.Z)({id:"credentials",name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Por favor ingresa tu correo y contrase\xf1a");let{email:r,password:t}=e;try{let r=(await i.Z).db(),t=await r.collection("users").findOne({email:e.email});if(!t)throw Error("No existe un usuario con este correo");let o=t.password;if("string"!=typeof o)throw Error("Contrase\xf1a no v\xe1lida");let a=o.toString(),n=e.password.toString(),l=!1;try{l=await s.ZP.compare(n,a)}catch(e){throw console.error("Error al comparar contrase\xf1as:",e),Error("Error al verificar la contrase\xf1a")}if(!l)throw Error("Contrase\xf1a incorrecta");let{password:u,...c}=t;return{id:t._id.toString(),email:t.email,name:t.name,image:t.image}}catch(e){throw console.error("Error during authorization:",e),e}}})],adapter:{...(0,o.dJ)(i.Z,{databaseName:process.env.MONGODB_DB}),async createUser(e){let r=(await i.Z).db(),t=e.email?.split("@")[0]||`user${Date.now()}`,o=t,a=1;for(;await r.collection("users").findOne({username:o});)o=`${t}${a}`,a++;let n={...e,username:o,plan:"free",provider:"google",emailVerified:e.emailVerified||new Date,createdAt:new Date,updatedAt:new Date},s=await r.collection("users").insertOne(n);return{...n,id:s.insertedId.toString()}}},session:{strategy:"jwt"},jwt:{maxAge:2592e3},secret:"BT+U6h3U0dzZRfcmFcTBgSLpg3fMDD0QX680SmuhKCY=",pages:{signIn:"/auth/signin",error:"/auth/signin"},debug:!1,events:{async createUser({user:e,account:r,profile:t,isNewUser:o}){},signIn:async({user:e,account:r,profile:t,isNewUser:o})=>(o&&r?.provider&&console.log(`Nuevo usuario creado con ${r.provider}`),!0),async error(e){console.error("Error de autenticaci\xf3n:",e)}},callbacks:{async signIn({user:e,account:r,profile:t,email:o,credentials:a}){if(o?.verificationRequest||!r?.provider||"credentials"===r.provider)return!0;try{if(r?.provider&&"credentials"!==r.provider){let o=(await i.Z).db();await o.collection("users").findOne({email:e.email})?await o.collection("users").updateOne({email:e.email},{$set:{name:e.name,image:t?.picture||e.image,provider:r.provider,updatedAt:new Date}}):await o.collection("users").insertOne({email:e.email,name:e.name,image:t?.picture||e.image,emailVerified:new Date,plan:"free",provider:r.provider,createdAt:new Date,updatedAt:new Date})}return!0}catch(e){return console.error("Error en el callback de signIn:",e),!1}},jwt:async({token:e,user:r,account:t})=>(r&&(e.id=r.id,e.provider=t?.provider),e),async session({session:e,token:r,user:t}){try{if(!e?.user?.email)return console.warn("No se encontr\xf3 el correo electr\xf3nico en la sesi\xf3n"),e;let o=(await i.Z).db(process.env.MONGODB_DB||""),a=e.user.email.toLowerCase(),n=await o.collection("users").findOne({email:a});if(!n)return console.warn(`Usuario con email ${a} no encontrado en la base de datos`),e;let s=n._id?.toString()||r.id||t?.id||"";if(e.user){if(e.user.id=s,void 0===n.plan||null===n.plan){let e="free";await o.collection("users").updateOne({_id:n._id},{$set:{plan:e,provider:r.provider||"google",updatedAt:new Date}}),n.plan=e,console.log(`Plan por defecto (${e}) asignado al usuario ${a}`)}if(!n.provider){let e=r.provider||"google";await o.collection("users").updateOne({_id:n._id},{$set:{provider:e,updatedAt:new Date}}),n.provider=e,console.log(`Proveedor ${e} asignado al usuario ${a}`)}r.plan=n.plan||"free",r.provider=n.provider||"google",e.user={...e.user,id:s,plan:n.plan||"free",provider:n.provider||"google"},console.log("Datos de sesi\xf3n actualizados para el usuario:",{email:e.user.email,plan:e.user.plan,provider:e.user.provider,id:e.user.id})}return e}catch(r){return console.error("Error en el callback de sesi\xf3n:",r),e}}}}},2021:(e,r,t)=>{t.d(r,{Z:()=>n});var o=t(38013);if(!process.env.MONGODB_URI)throw Error("Please add your MongoDB connection string to .env.local");let a=process.env.MONGODB_URI,n=new o.MongoClient(a,{}).connect()},38238:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"ReflectAdapter",{enumerable:!0,get:function(){return t}});class t{static get(e,r,t){let o=Reflect.get(e,r,t);return"function"==typeof o?o.bind(e):o}static set(e,r,t,o){return Reflect.set(e,r,t,o)}static has(e,r){return Reflect.has(e,r)}static deleteProperty(e,r){return Reflect.deleteProperty(e,r)}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[948,885,459,972],()=>t(78992));module.exports=o})();